# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yml


stages:
  - stage: Build
    displayName: Build the project
    jobs:
    - job: Build
      displayName: Build job
      pool:
        vmImage: ubuntu-latest
      steps:
      - script: |
          zip -r $(Build.ArtifactStagingDirectory)/lambda.zip . -x *.txt '*.git*' *.gitignore *.yml @
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'lambda'
          publishLocation: 'Container'

  - stage: Deployment
    displayName: Deploy the project
    jobs:
      - job: Deployment
        displayName: Deploy job
        pool:

          vmImage: ubuntu-latest
        steps:
        - task: SystemsManagerGetParameter@1
          inputs:
            awsCredentials: 'aws'
            regionName: '$(REGION)'
            readMode: 'single'
            parameterName: 'lambdaFunction'
            singleNameTransform: 'custom'
            customVariableName: 'LAMBDA_FUNCTION'
          displayName: 'Getting Lambda Function name'
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'lambda'
            downloadPath: '$(System.ArtifactsDirectory)'
        - task: S3Upload@1
          inputs:
            awsCredentials: 'aws'
            regionName: '$(REGION)'
            bucketName: 'lambda-function-inventory'
            sourceFolder: '$(System.ArtifactsDirectory)/lambda'
            globExpressions: '**'
            createBucket: true
        - task: LambdaDeployFunction@1
          inputs:
            awsCredentials: 'aws'
            regionName: '$(REGION)'
            deploymentMode: 'codeonly'
            functionName: '$(LAMBDA_FUNCTION)'
            codeLocation: 's3object'
            s3Bucket: 'lambda-function-inventory'
            s3ObjectKey: 'lambda.zip'